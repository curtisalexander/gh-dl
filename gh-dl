#!/usr/local/bin/Rscript --no-site-file --no-init-file --no-restore

# --vanilla ==> --no-site-file --no-init-file --no-restore --no-environ
# thus the above reads the .Renviron file(s)

## required packages ==
# devtools::install_github("docopt/docopt.R")
# install.packages("httr")

## docopt.org ==
"Usage:
    gh-dl --user=<user> --pkg=<pkg> --path=<path>
    gh-dl -h | --help

Options:
    --user=<user>       Github username
    --pkg=<pkg>         R package name
    --path=<path>       Directory path to save tar.gz file
    -h, --help          Help

Example:
    gh-dl --user=rstudio --pkg=sparklyr --path=\"~/code/r-pkgs\"" -> doc

## download ==
opts <- docopt::docopt(doc)

library("purrr")

# interactive vs. Rscript
if (interactive()) {
  # testing
  user <- "curtisalexander"
  pkg <- "CRAmisc"
  pkg_path <- file.path("~/code/r-pkgs")
} else {
  user <- opts$user
  pkg <- opts$pkg
  pkg_path <- file.path(opts$path)
}

# DESCRIPTION metadata
desc_url <- httr::modify_url("https://api.github.com",
                             path = paste0("repos/",
                                           user, "/",
                                           pkg, "/",
                                           "contents/DESCRIPTION"))

# get the URL to download the DESCRIPTION file
httr::GET(desc_url) %>%
  httr::stop_for_status() %>%
  httr::content(as = "parsed") %>%
  .$download_url -> dl_url

# from the DESCRIPTION file, parse out the version
httr::GET(dl_url) %>%
  httr::stop_for_status() %>%
  httr::content(as = "text") %>%
  strsplit("\n") %>%
  purrr::flatten_chr() %>%
  purrr::keep(~ grepl(pattern = "^Version", x = ., perl = TRUE)) %>%
  strsplit(":") %>%
  purrr::flatten_chr() %>%
  purrr::map_chr(trimws) %>%
  purrr::keep(~ grepl(pattern = "[[:digit:]]", x = ., perl = TRUE)) -> version

# download the R package as a tarball
tarball_url <- httr::modify_url("https://api.github.com",
                                path = paste0("repos/",
                                           user, "/",
                                           pkg, "/",
                                           "tarball"))

# download tarball
httr::GET(tarball_url,
          httr::write_disk(file.path(pkg_path,
                                     paste0(pkg, "_", version, ".tar.gz"))))

# vim:syntax=R
